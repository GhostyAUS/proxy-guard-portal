
worker_processes auto;
error_log /var/log/nginx/error.log info;

events {
    worker_connections 1024;
}

http {
    # Logging formats
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
    
    log_format denied '$remote_addr - [$time_local] "$request" '
                      '$status "$http_user_agent" "$http_referer" '
                      'Host: "$host" URI: "$request_uri" '
                      'Client: "$remote_addr" '
                      'Group: "$client_group"';
    
    # Log file paths
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log info;
    access_log /var/log/nginx/denied.log denied if=$status ~ ^4;
    
    # CLIENT GROUP DEFINITIONS
    geo $remote_addr $client_group {
        default "";
        192.168.1.0/24 default_group;  # Local network
        127.0.0.1 default_group;       # Localhost
    }
    
    server {
        listen 8080;
        resolver 8.8.8.8 ipv6=off;
        
        # HTTPS CONNECT method handling
        proxy_connect;
        proxy_connect_allow all;
        proxy_connect_connect_timeout 10s;
        proxy_connect_read_timeout 60s;
        proxy_connect_send_timeout 60s;
        
        # Security headers
        proxy_hide_header Upgrade;
        proxy_hide_header X-Powered-By;
        add_header Content-Security-Policy "upgrade-insecure-requests";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Cache-Control "no-transform" always;
        add_header Referrer-Policy no-referrer always;
        add_header X-Robots-Tag none;
        
        location / {
            # Access rules for default group
            set $allow_default_group 0;
            
            # Check if client belongs to default group
            if ($client_group = "default_group") {
                # Example.com domain
                if ($host = "example.com") {
                    set $allow_default_group 1;
                }
                # Google wildcard domain
                if ($host ~ ".*\.google\.com$") {
                    set $allow_default_group 1;
                }
            }
            
            # Evaluate access permissions
            set $allowed 0;
            if ($allow_default_group = 1) {
                set $allowed 1;
            }
            
            # Deny access if not allowed
            if ($allowed = 0) {
                return 403 "Access denied: Either your IP is not whitelisted or you're not authorized to access this URL.";
            }
            
            # HTTP forwarding settings
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Connection "";
            proxy_pass $scheme://$host$request_uri;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
}
